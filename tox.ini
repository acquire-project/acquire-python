[tox]
envlist=py{38,39,310}-{linux,macos,windows}
isolated_build=true
toxworkdir=/tmp/.tox

[gh-actions]
python = 
    3.8: py38
    3.9: py39
    3.9.0: py390
    3.10: py310

# This section turns environment variables from github actions
# into tox environment factors.
[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    windows-latest: windows
    macos-latest: macos

# Settings defined in the top-level testenv section are automatically
# inherited by individual environments unless overridden.
[testenv]
platform = 
    macos: darwin
    linux: linux
    windows: win32

# These environment variables will be passed from the calling environment
# to the tox environment
passenv = 
    CI
    GITHUB_ACTIONS

deps =
    pytest-cov
    pytest-json-report

extras = 
    testing

commands = 
    python -m pytest {env:PYTEST_PATH:} --color=yes --basetemp={envtmpdir} \
        --cov-report=xml --cov={env:PYTEST_PATH:calliphlox} --maxfail=5 \
        --json-report --json-report-file={toxinidir}/report-{envname}.json \
        {posargs}

[testenv:isort]
skip_install = True
deps = pre-commit
commands = pre-commit run isort --all-files

[testenv:flake8]
skip_install = True
deps = pre-commit
commands = pre-commit run flake8 --all-files

[testenv:black]
skip_install = True
deps = pre-commit
commands = pre-commit run black --all-files

[testenv:import-lint]
skip_install = True
deps = pre-commit
commands = pre-commit run --hook-stage manual import-linter --all-files

[testenv:package]
isolated_build = true
skip_install = true
deps =
    check_manifest
    wheel
    twine
    build
commands =
    check-manifest
    python -m build
    python -m twine check dist/*