name: Release

on:
  push:
    tags:
      - "v*.*.*"
      - "nightly"

jobs:
  windows:
    name: Build and test on Windows
    strategy:
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
    runs-on: windows-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.target }}
      - name: Checkout core-libs nightly
        if: ${{github.ref_name == 'nightly'}}
        run: |
          git fetch --tags
          git checkout nightly
        working-directory: ${{github.workspace}}/acquire/acquire-core-libs
      - name: Checkout runtime nightly
        if: ${{github.ref_name == 'nightly'}}
        run: |
          git fetch --tags
          git checkout nightly
        working-directory: ${{github.workspace}}/acquire/acquire-video-runtime
      - name: Set config to pull nightly drivers
        if: ${{github.ref_name == 'nightly'}}
        run: |
          cat >drivers.json <<EOF
          {
            "acquire-driver-common": "nightly",
            "acquire-driver-zarr": "nightly",
            "acquire-driver-egrabber": "nightly",
            "acquire-driver-hdcam": "nightly"
          }
          EOF
        shell: bash
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x64
          args: --release --out dist
          sccache: 'true'
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov tifffile zarr dask ome-zarr
      - name: Install Acquire
        run: |
          $whl = ls | Select -First 1
          python -m pip install $whl
        shell: pwsh
        working-directory: "${{ github.workspace }}/dist"
      - name: Test artifact
        run: |
          python -m pytest -k test_basic --color=yes --cov-report=xml --cov=acquire --maxfail=5 --log-cli-level=0
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [ x86_64, aarch64 ]
        python:
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Checkout core-libs nightly
        if: ${{github.ref_name == 'nightly'}}
        run: |
          git fetch --tags
          git checkout nightly
        working-directory: ${{github.workspace}}/acquire/acquire-core-libs
      - name: Checkout runtime nightly
        if: ${{github.ref_name == 'nightly'}}
        run: |
          git fetch --tags
          git checkout nightly
        working-directory: ${{github.workspace}}/acquire/acquire-video-runtime
      - name: Set config to pull nightly drivers
        if: ${{github.ref_name == 'nightly'}}
        run: |
          cat >drivers.json <<EOF
          {
            "acquire-driver-common": "nightly",
            "acquire-driver-zarr": "nightly",
            "acquire-driver-egrabber": "nightly",
            "acquire-driver-hdcam": "nightly"
          }
          EOF
        shell: bash
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov tifffile zarr dask ome-zarr
      - name: Install Acquire
        if: ${{ matrix.target == 'x86_64' }}
        run: python -m pip install *.whl
        working-directory: "${{ github.workspace }}/dist"
      - name: Test artifact
        if: ${{ matrix.target == 'x86_64' }}
        run: |
          python -m pytest -k test_basic --color=yes --cov-report=xml --cov=acquire --maxfail=5 --log-cli-level=0
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Checkout core-libs nightly
        if: ${{github.ref_name == 'nightly'}}
        run: |
          git fetch --tags
          git checkout nightly
        working-directory: ${{github.workspace}}/acquire/acquire-core-libs
      - name: Checkout runtime nightly
        if: ${{github.ref_name == 'nightly'}}
        run: |
          git fetch --tags
          git checkout nightly
        working-directory: ${{github.workspace}}/acquire-video-runtime
      - name: Set config to pull nightly drivers
        if: ${{github.ref_name == 'nightly'}}
        run: |
          cat >drivers.json <<EOF
          {
            "acquire-driver-common": "nightly",
            "acquire-driver-zarr": "nightly",
            "acquire-driver-egrabber": "nightly",
            "acquire-driver-hdcam": "nightly"
          }
          EOF
        shell: bash
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov tifffile zarr dask ome-zarr
      - name: Install Acquire
        run: python -m pip install *.whl
        working-directory: "${{ github.workspace }}/dist"
      - name: Test artifact
        run: |
          python -m pytest -k test_basic --color=yes --cov-report=xml --cov=acquire --maxfail=5 --log-cli-level=0
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    needs:
      - windows
      - macos
      - linux
    name: "Release"
    runs-on: "ubuntu-latest"

    environment:
      name: pypi
      url: https://pypi.org/p/acquire-imaging

    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        id: download
        with:
          path: ${{ github.workspace }}/artifacts

      - name: Collect wheels
        run: |
          mkdir -p dist
          mv ${{steps.download.outputs.download-path}}/*/*.whl dist

#      - name: Tagged release
#        if: ${{ github.ref_name != 'nightly' }}
#        uses: marvinpinto/action-automatic-releases@latest
#        with:
#          repo_token: ${{ github.token }}
#          prerelease: false
#          files: |
#            dist/*.whl
#
#      - name: Nightly release
#        if: ${{ github.ref_name == 'nightly' }}
#        uses: marvinpinto/action-automatic-releases@latest
#        with:
#          repo_token: ${{ secrets.PAT }}
#          automatic_release_tag: "nightly"
#          prerelease: true
#          title: "Nightly Release"
#          files: |
#            dist/*.whl
#
#      - name: Publish wheels
#        if: ${{ github.ref_name != 'nightly' }}
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          skip-existing: true
